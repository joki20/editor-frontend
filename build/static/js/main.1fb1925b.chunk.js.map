{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["save","content","document","querySelector","textContent","console","log","Toolbar","className","SaveBtn","onClick","Component","App","editor","ClassicEditor","data","onReady","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6OAKA,SAASA,IACP,IAAIC,EAAUC,SAASC,cAAc,SAASC,YAC9CC,QAAQC,IAAIL,GAKd,SAASM,IACP,OACE,qBAAKC,UAAU,UAAf,SACE,cAAC,EAAD,M,IAMAC,E,4JACJ,WACE,OACE,wBAAQD,UAAU,WAAWE,QAASV,EAAtC,sB,GAHgBW,aA4BPC,E,4JAlBX,WACI,OACE,sBAAKJ,UAAU,MAAf,UACE,cAACD,EAAD,IACI,iEACA,cAAC,WAAD,CACIM,OAASC,IACTC,KAAK,gCACLC,QAAU,SAAAH,GAENR,QAAQC,IAAK,0BAA2BO,a,GAX9CF,aClBHM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAAS2B,eAAe,SAM1BZ,M","file":"static/js/main.1fb1925b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n// SAVE FUNCTION\nfunction save() {\n  let content = document.querySelector(\".ck p\").textContent\n  console.log(content)\n\n}\n\n// TOOLBAR WITH SAVE BUTTON\nfunction Toolbar() {\n  return (\n    <div className=\"toolbar\">\n      <SaveBtn />\n    </div>\n  )\n}\n\n// SAVE BUTTON\nclass SaveBtn extends Component {\n  render() {\n    return (\n      <button className=\"btn save\" onClick={save} >Save</button>\n    )\n  }\n}\n\n\nclass App extends Component {\n    render() {\n        return (\n          <div className=\"App\">\n            <Toolbar />\n                <h2>Using CKEditor 5 build in React</h2>\n                <CKEditor\n                    editor={ ClassicEditor }\n                    data=\"<p>Hello from CKEditor 5!</p>\"\n                    onReady={ editor => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log( 'Editor is ready to use!', editor );\n                    } }\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}