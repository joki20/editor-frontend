{"version":3,"sources":["App.js","components/Toolbar.js","components/ListAll.js","index.js"],"names":["ck5editor","chosen","id","title","text","Toolbar","props","className","children","ListAll","state","documents","axios","get","then","res","data","setState","onChange","this","renderContentAfterChoice","defaultValue","disabled","map","doc","name","_id","content","type","onClick","createOrSaveDocument","value","React","Component","selectIndex","renderSelect","e","target","options","selectedIndex","document","getElementsByTagName","getAttribute","innerText","setData","getElementsByClassName","innerHTML","createOrSave","a","preventDefault","getData","substring","post","response","status","catch","err","console","warn","log","setAttribute","window","location","reload","App","editorComponent","editor","ClassicEditor","onReady","setEditor","event","ReactDOM","render","getElementById"],"mappings":"yJAQIA,EAEAC,EACAC,EACAC,EACAC,E,qHCNWC,EAJC,SAACC,GACb,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAME,Y,gBCDrCC,E,4MACJC,MAAQ,CACNC,UAAW,I,uDAGb,WAAqB,IAAD,OAClBC,IAAMC,IAAN,0DACGC,MAAK,SAAAC,GACJ,IAAMJ,EAAYI,EAAIC,KAAKA,KAC3B,EAAKC,SAAS,CAAEN,mB,oBAItB,WACE,OACE,gCACM,uBAAMJ,UAAU,kBAAhB,UACI,yBAAQW,SAAUC,KAAKb,MAAMc,yBAA7B,UACI,wBAAQC,cAAY,EAACC,UAAU,EAA/B,6CAGA,wBAAQlB,KAAK,GAAb,wBACA,wBAAQkB,UAAU,IAEjBH,KAAKT,MAAMC,UAAUY,KAAI,SAACC,GAAD,OACxB,wBAEEC,KAAMD,EAAIE,IACVvB,MAAOqB,EAAIrB,MACXC,KAAMoB,EAAIG,QAJZ,SAIsBH,EAAIrB,OAHnBqB,EAAIE,WAMjB,uBAAOE,KAAK,WACZ,uBAAOA,KAAK,SAASC,QAASV,KAAKb,MAAMwB,qBAAsBvB,UAAU,WAAWwB,MAAM,aAE9F,qBAAKxB,UAAU,kB,GAnCLyB,IAAMC,WA0CbxB,IFpCXyB,EAAc,EAWlB,SAASC,EAAaC,GAElBF,EAAcE,EAAEC,OAAOC,QAAQC,cAG/BtC,EAASuC,SAASC,qBAAqB,UAAUP,GACjDhC,EAAKD,EAAOyC,aAAa,QACzBvC,EAAQF,EAAO0C,UACfvC,EAAOH,EAAOyC,aAAa,QAG3B1C,EAAU4C,QAAQxC,GAGlBoC,SAASK,uBAAuB,UAAU,GAAGC,UAAY,G,SAG9CC,E,8EAAf,WAA4BX,GAA5B,SAAAY,EAAA,yDACIZ,EAAEa,iBAGF7C,EAAOJ,EAAUkD,UAGG,IAAhBhB,EAPR,wBAUQ/B,EAAQC,EAAK+C,UAAU,EAAG,IAVlC,SAacvC,IAAMwC,KAAN,2DAAuE,CACzEjD,MAAOA,EACPwB,QAASvB,IAERU,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,KAAKF,MAlBvC,OAoBQC,QAAQE,IAAI,wBACZnB,SAASK,uBAAuB,UAAU,GAAGC,UAAY,uBArBjE,+BA2BQ7C,EAAO2D,aAAa,OAAQxD,GA3BpC,UA6BcQ,IAAMwC,KAAN,mEAAuElD,EAAvE,KAA8E,CAChFC,MAAOA,EACPwB,QAASvB,IAERU,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,KAAKF,MAlCvC,QAoCIK,OAAOC,SAASC,SAEhBN,QAAQE,IAAI,oBACZnB,SAASK,uBAAuB,UAAU,GAAGC,UAAY,uBAvC7D,6C,0BA2CMkB,E,4JACF,WACI,OACI,sBAAKzD,UAAU,MAAf,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CACI0D,gBAAiBjE,EACjBoB,yBAA0Be,EAC1BL,qBAAsBiB,MAG9B,iEACA,cAAC,WAAD,CACImB,OAAQC,IACRjE,GAAG,WACHc,KAAK,oCACLoD,QAAS,SAACF,GAENT,QAAQE,IAAI,0BAA2BO,GAnF/D,SAAmBA,GACflE,EAAYkE,EAmFQG,CAAUH,IAEdhD,SAAW,SAAEoD,EAAOJ,c,GArBtBjC,aAgCH+B,I,MG3GfO,IAASC,OACP,cAAC,EAAD,IACAhC,SAASiC,eAAe,W","file":"static/js/main.6b6a7676.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport Toolbar from \"./components/Toolbar\";\nimport ListAll from \"./components/ListAll\";\nimport axios from 'axios'; // database requests\n\n// global variables\nlet ck5editor;\nlet selectIndex = 1; // start choice (create new)\nlet chosen; // chosen <option> element, undefined if empty\nlet id;\nlet title;\nlet text;\n\nfunction setEditor(editor) {\n    ck5editor = editor;\n    return ck5editor\n}\n\nfunction renderSelect(e) {\n    // get index of <select>\n    selectIndex = e.target.options.selectedIndex;\n\n    // get chosen <select> and extract id, title and text\n    chosen = document.getElementsByTagName(\"option\")[selectIndex];\n    id = chosen.getAttribute(\"name\");\n    title = chosen.innerText;\n    text = chosen.getAttribute(\"text\")\n\n    // Replace text content in ck5 to changed\n    ck5editor.setData(text);\n\n    // empty status div\n    document.getElementsByClassName(\"status\")[0].innerHTML = \"\";\n}\n\nasync function createOrSave(e) {\n    e.preventDefault();\n\n    // get text with <p> tags\n    text = ck5editor.getData()\n\n    // if CREATE NEW was selected\n    if (selectIndex === 1) {\n        \n        // create title from text\n        title = text.substring(3, 15);\n        \n        // post as query /create?title=titel&content=text\n        await axios.post(`https://jsramverk-editor-joki20.azurewebsites.net/create`, {\n            title: title,\n            content: text\n        })\n            .then(response => response.status)\n            .catch(err => console.warn(err));\n\n        console.log(\"NEW DOCUMENT CREATED\");\n        document.getElementsByClassName(\"status\")[0].innerHTML = \"Document was created\";\n\n    \n    } else { // else UPDATE DOCUMENT\n\n        // replace <option text> to current/changed content\n        chosen.setAttribute(\"text\", text);\n\n        await axios.post(`https://jsramverk-editor-joki20.azurewebsites.net/update/${id}/`, {\n            title: title,\n            content: text\n        })\n            .then(response => response.status)\n            .catch(err => console.warn(err));\n    }\n    window.location.reload();\n\n    console.log(\"DOCUMENT UPDATED\");\n    document.getElementsByClassName(\"status\")[0].innerHTML = \"Document was updated\";\n    \n}\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Toolbar>\n                    <ListAll\n                        editorComponent={ck5editor}\n                        renderContentAfterChoice={renderSelect}\n                        createOrSaveDocument={createOrSave}\n                    />\n                </Toolbar>\n                <h2>Using CKEditor 5 build in React</h2>\n                <CKEditor\n                    editor={ClassicEditor}\n                    id=\"ckeditor\"\n                    data=\"<p>Make a choice in the menu!</p>\" \n                    onReady={(editor) => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log(\"Editor is ready to use!\", editor);\n                        setEditor(editor);\n                    }}\n                    onChange={ ( event, editor ) => {\n                        // const data = editor.getData();\n                        // console.log( { data } );\n                    } }\n\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from \"react\";\n\n// TOOLBAR WITH SAVE BUTTON props.children inside\nconst Toolbar = (props) => {\n    return <div className=\"toolbar\">{props.children}</div>;\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport axios from 'axios'; // database requests\n\nclass ListAll extends React.Component {\n  state = {\n    documents: []\n  }\n\n  componentDidMount() {\n    axios.get(`https://jsramverk-editor-joki20.azurewebsites.net/list`)\n      .then(res => {\n        const documents = res.data.data; // res.data.data is array of objects/documents\n        this.setState({ documents });\n      })\n  }\n\n  render() {\n    return (\n      <div>\n            <form className=\"documentChoices\">\n                <select onChange={this.props.renderContentAfterChoice}>\n                    <option defaultValue disabled={true}>\n                        --- Create or edit document ---\n                    </option>\n                    <option text=\"\">Create new</option>\n                    <option disabled={true}></option>\n\n                    {this.state.documents.map((doc) => (\n                      <option\n                        key={doc._id}\n                        name={doc._id}\n                        title={doc.title}\n                        text={doc.content}>{doc.title}</option>\n                    ))}\n                  </select>\n                <input type=\"hidden\"></input>\n                <input type=\"submit\" onClick={this.props.createOrSaveDocument} className=\"btn save\" value=\"Spara\"></input>\n            </form>\n            <div className=\"status\"></div>\n        </div>\n\n    )\n  }\n}\n\nexport default ListAll;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}