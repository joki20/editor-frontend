{"version":3,"sources":["components/AuthForm.js","components/Toolbar.js","components/ListDocs.js","components/ListUsers.js","components/AddUsers.js","components/Title.js","App.js","index.js"],"names":["AuthForm","props","token","currentUser","onClick","logout","className","type","defaultValue","value","handleRegister","handleLogin","Toolbar","saveContent","messageStatus","ListDocs","listDocs","map","doc","clickTitle","name","id","title","ListUsers","allowedUsers","user","AddUsers","unallowedUsers","allowUser","Title","server","socket","io","App","getDocs","a","console","log","allUsers","allowedDocs","axios","get","then","res","data","Users","forEach","push","email","docs","allowed_users","includes","state","setState","postDatabase","titleInp","post","content","currentContent","updateDatabase","docOwner","clickedDocOwner","docId","clickedDocId","response","status","catch","err","warn","getCurrentInput","innerHTML","titleInput","document","getElementsByClassName","_id","html","emit","on","getCurrentTitle","currentTitle","e","clickedTitle","target","unallowedPersons","save","titleExists","register","preventDefault","mail","password","login","match","usersArray","clickedUser","allowed","index","indexOf","unallowed","splice","this","onChange","theme","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.36dcaf78.chunk.js","sourcesContent":["import React from \"react\";\n\n// SIGNUP AND LOGIN\nconst AuthForm = (props) => {\n    // if token exists, then user is logged in\n    if (props.token) {\n        return (\n            <div>\n                <div>{props.currentUser} is logged in</div>\n                <button onClick={props.logout} >Log out</button>\n            </div>\n\n        )\n    } else {\n        return (\n            <div className=\"AuthForm\">\n                <form>\n                    <label>Email</label>\n                    <input className=\"email\" type=\"email\" defaultValue=\"joki20@student.bth.se\"></input>\n\n                    <label>Password</label>\n                    <input className=\"password\" defaultValue=\"abc123\"></input>\n                    <input\n                        type=\"submit\"\n                        className=\"register\"\n                        value=\"Register\"\n                        onClick={props.handleRegister} />\n                    <input\n                        type=\"submit\"\n                        className=\"login\"\n                        value=\"Login\"\n                        onClick={props.handleLogin}\n                    />\n                </form>\n            </div>\n        )\n    }\n};\n\nexport default AuthForm;","import React from \"react\";\nimport AuthForm from \"./AuthForm.js\";\n\n// TOOLBAR WITH SAVE BUTTON props.children inside\nconst Toolbar = (props) => {\n    return (\n        <div className=\"Toolbar\">\n            <AuthForm\n                // from App.js\n                handleRegister={props.handleRegister}\n                handleLogin={props.handleLogin}\n                token={props.token}\n                currentUser={props.currentUser}\n                logout={props.logout}\n            />\n\n            <button onClick={props.saveContent} >SAVE DOC</button>\n            <div className=\"clickedStatus\">{props.messageStatus}</div>\n        </div>\n    )\n};\n\nexport default Toolbar;\n","import React from 'react';\n\n\n// CURRENT STATE\nconst ListDocs = (props) => {\n  return (\n    <div className=\"ListDocs\">\n      <h2>Documents</h2>\n      <ul>\n        {props.listDocs.map((doc) => (\n          <li onClick={props.clickTitle}\n        key={doc.id}\n        name={doc.id}\n      >{doc.title}</li>\n      ))\n      }\n      </ul>\n    </div>\n  )\n}\n\n  export default ListDocs;","import React from 'react';\n\n// CURRENT STATE\nconst ListUsers = (props) => {\n  let id = 0;\n  return (\n    <div className=\"ListUsers\">\n      <h2>Allowed users</h2>\n      <ul>\n        {props.allowedUsers.map((user) => (\n          <li \n        key={++id}\n      >{user}</li>\n      ))\n      }\n      </ul>\n    </div>\n  )\n}\n\nexport default ListUsers;","import React from 'react';\n\n\n// CURRENT STATE\nconst AddUsers = (props) => {\n  let id = 0;\n  return (\n    <div className=\"AddUsers\">\n    <h2>Add user</h2>\n      <ul>\n      {props.unallowedUsers.map((user) => (\n          <li onClick={props.allowUser}\n        key={++id}\n      >{user}</li>\n      ))\n      }\n      </ul>\n    </div>\n  )\n}\n\nexport default AddUsers;","import React from \"react\";\n\n// TOOLBAR WITH SAVE BUTTON props.children inside\nconst Title = (props) => {\n    return (\n        <div className=\"Title\">\n            <h2>Title</h2>\n            <input className=\"titleInput\" aria-label=\"inputLable\"></input>\n        </div>\n\n    )\n};\n\nexport default Title;","import React from \"react\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport Toolbar from \"./components/Toolbar\";\nimport ListDocs from \"./components/ListDocs.js\";\nimport ListUsers from \"./components/ListUsers.js\";\nimport AddUsers from \"./components/AddUsers.js\";\nimport Title from \"./components/Title.js\";\nimport axios from 'axios'; // database requests\nimport './App.css';\nimport 'react-quill/dist/quill.bubble.css';\n// io is a function to call an individual socket\nimport io from \"socket.io-client\";\n\n// let server = `http://localhost:1337`;\nlet server = `https://jsramverk-editor-joki20.azurewebsites.net`\nconst socket = io(\"http://student.bth.se\"); // http://localhost:3000\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // CURRENT STATE\n        this.state = {\n            allUsers: [],\n            allowedDocs: [],\n            allowedUsers: [],\n            unallowedUsers: [],\n            currentTitle: '',\n            currentContent: '',\n            messageStatus: '',\n            token: \"\", // if token is set, user is logged in\n            currentUser: \"\",\n            clickedDocId: \"\",\n            clickedDocOwner: \"\",\n        };\n    }\n\n    socketUpdateContent(content) {\n        this.setState({ currentContent: content })\n    }\n\n    getDocs = async () => {\n        console.log(\"getDocs was called\")\n        let allUsers = []\n        let allowedDocs = [];\n        \n        await axios.get(`${server}/users`)\n            .then(res => {\n                let usersArray = res.data.data[0].Users;\n                // for each user...\n                usersArray.forEach((user) => {\n                    // collect every created user in database\n                    allUsers.push(user.email);\n                    // look each associated doc if current logged in user is allowed\n                    user.docs.forEach((doc) => {\n                        // if user is allowed for this doc, then push doc into allowedDocs array\n                        if (doc.allowed_users.includes(this.state.currentUser)) {\n                            allowedDocs.push(doc)\n                        }\n                    })\n                })\n            })\n        await this.setState({ allowedDocs: allowedDocs })\n        await this.setState({ allUsers: allUsers })\n    }\n            \n            \n\n    // // MOUNT DATABASE DATA\n    // async componentDidMount() {\n    //     await this.getDatabase()\n    // }\n\n    postDatabase = (titleInp) => {\n        // post as query /create?title=titel&content=text\n        axios.post(`${server}/create`, {\n            email: this.state.currentUser,\n            title: titleInp,\n            content: this.state.currentContent\n        })\n\n        this.getDocs();\n    }\n\n    updateDatabase = async () => {\n        await axios.post(`${server}/update/`, {\n            docOwner: this.state.clickedDocOwner,\n            docId: this.state.clickedDocId,\n            content: this.state.currentContent\n        })\n            .then(response => response.status)\n            .catch(err => console.warn(err));\n    }\n\n    // SETSTATE: arrow function will prevent 'this.setState is not a function\n    getCurrentInput = (innerHTML) => {\n        this.setState({ currentContent: innerHTML });\n\n        // get title input and look for match in order get correct id\n        var titleInput = document.getElementsByClassName(\"titleInput\")[0].value;\n        var id = null;\n\n        this.state.allowedDocs.forEach((doc) => {\n            if (doc.title === titleInput) {\n                id = doc._id;\n            }\n        })\n            \n        // emit object with id and content to backend in order to create room\n        let doc = {\n            _id: id,\n            html: this.state.currentContent\n        }\n        socket.emit(\"create\", doc)\n\n        // received from server to all clients, containing data.html\n        socket.on(\"doc\", (data) => {\n            this.setState({ currentContent: data.html })\n        });\n    }\n\n    getCurrentTitle = (innerHTML) => {\n        this.setState({ currentTitle: innerHTML });\n    }\n\n    clickTitle = async (e) => {\n        let clickedTitle = e.target.innerHTML; // get title from click\n        let unallowedPersons = [];\n        console.log(\"CLICKED TITLE\")\n        console.log(e)\n        \n        //await meaning finish this before next await\n        await this.state.allowedDocs.forEach((doc) => {\n            if (doc.title === clickedTitle) {\n                console.log(doc)\n                document.getElementsByClassName(\"titleInput\")[0].value = doc.title;\n                // setState title and content\n                this.setState({ currentTitle: doc.title })\n                this.setState({ currentContent: doc.content })\n                this.setState({ allowedUsers: doc.allowed_users })\n                this.setState({ clickedDocId: doc.id })\n                this.setState({ clickedDocOwner: doc.allowed_users[0] }) // first person in allowed_users always owns document\n            }\n        })\n\n        // if user is not allowed, add to list of unallowed users\n        await this.state.allUsers.forEach((user) => {\n            if (!this.state.allowedUsers.includes(user)) {\n                unallowedPersons.push(user);\n            }\n        })\n        this.setState({ unallowedUsers: unallowedPersons })\n    }\n\n    \n    save = async () => {\n        let titleExists = \"no\";\n\n        if (this.state.token == \"\") {\n            return this.setState({ messageStatus: \"You must be logged in\" });\n        }\n        // get text of title input\n        var titleInput = document.getElementsByClassName(\"titleInput\")[0].value;\n        var id = null;\n\n        if (!titleInput) {\n            return this.setState({ messageStatus: \"You must provide a title\" });\n        }\n        \n        // forEach((element) => { ... } )\n        this.state.allowedDocs.forEach((doc) => {\n            // check for match, and if so do an update\n            if (doc.title === titleInput) {\n                this.setState({ clickedDocId: doc.id });\n                // owner is always first in array_users\n                this.setState({ clickedDocOwner: doc.allowed_users[0] })\n\n                this.setState({ messageStatus: \"Title content updated\" });\n                titleExists = \"yes\";\n                id = doc.id;\n                this.updateDatabase()\n            }\n        }) // stop loop\n\n        // IF TITLE DOESN'T EXIST\n        if (titleExists === \"no\") {\n            console.log(\"Title doesn't exist\")\n            this.setState({ messageStatus: \"New entry created\" });\n            await this.postDatabase(titleInput);\n        }\n    }\n\n    register = async (e) => {\n        e.preventDefault();\n\n        let mail = document.getElementsByClassName(\"email\")[0].value;\n        let password = document.getElementsByClassName(\"password\")[0].value;\n\n        // register user\n        await axios.post(`${server}/register`, {\n            email: mail,\n            password: password\n        })\n        \n        document.getElementsByClassName(\"email\")[0].value = '';\n        document.getElementsByClassName(\"password\")[0].value = '';\n        return this.setState({ messageStatus: `${mail} was added, try to login` });\n\n        console.log(\"register\")\n    }\n\n    login = async (e) => {\n        e.preventDefault();\n        let mail = document.getElementsByClassName(\"email\")[0].value\n        let password = document.getElementsByClassName(\"password\")[0].value\n        let match = 'no';\n\n        this.setState({ currentUser: mail })\n\n            // if no email or password, exit function\n        if (!mail || !password) {\n            return this.setState({ messageStatus: \"Email or password missing\" });\n        }\n\n        await axios.get(`${server}/users`)\n            .then(res => {\n                // get array of users\n                let usersArray = res.data.data[0].Users\n                console.log(usersArray)\n                // check if user exists\n                usersArray.forEach((user) => {\n                    console.log(user.email)\n                    if (user.email === mail) {\n                        match = \"yes\"\n                    }\n                })\n            })\n\n            // if not, show message\n            if (match === \"no\") {\n                this.setState({ messageStatus: \"Sorry, but email doesn't exist\" });\n            }\n            // if match, send emaeil and password to backend and create JWT\n            if (match === \"yes\") {\n                console.log(\"matching email was found\")\n                // send email and password to backend, process login and return JWT\n                await axios.post(`${server}/login`, {\n                    email: mail,\n                    password: password\n                })\n                // if successful login response containsjwt, oherwise undefined\n                    .then(res => {\n                        let gotToken = res.data.data\n\n                        if (gotToken) {\n                            this.setState({ token: res.data.data })                            \n                        }\n                })\n                .catch(err => console.warn(err));\n            }\n        // setState to update array\n        this.getDocs()\n\n        this.setState({ messageStatus: '' })\n    }\n\n    logout = async () => {\n        this.setState({ currentUser: \"\" })\n        this.setState({ token: \"\" })\n        this.setState({ allowedDocs: [] })\n        this.setState({ allowedUsers: [] })\n        this.setState({ unallowedPersons: [] })\n        this.setState({ currentTitle: '' })\n        this.setState({ currentContent: '' })\n        document.getElementsByClassName(\"titleInput\")[0].value = ''\n    }\n\n    allowUser = async (e) => {\n        e.preventDefault();\n        let clickedUser = e.target.innerHTML;\n        console.log(\"clicked user to remove:\")\n        console.log(clickedUser)\n\n\n        // function for adding user to allowed_users for this doc\n        await axios.post(`${server}/allow_user`, {\n            email: clickedUser,\n            currentUser: this.state.currentUser,\n            docId: this.state.clickedDocId\n        })\n\n        // allow user in frontend\n        let allowed = this.state.allowedUsers;\n\n        allowed.push(clickedUser);\n        this.setState({ allowedUsers: allowed })\n\n        // delete user from unallowedUsers in frontend\n        const index = this.state.unallowedUsers.indexOf(clickedUser);\n        let unallowed = this.state.unallowedUsers;\n        // remove user\n        unallowed.splice(index, 1);\n        this.setState({ unallowedUsers: unallowed})\n\n        return this.setState({ messageStatus: `${clickedUser} is now allowed to edit this document` });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Toolbar\n                    saveContent={this.save}\n                    messageStatus={this.state.messageStatus}\n                    // functions for register and login\n                    handleRegister={this.register}\n                    handleLogin={this.login}\n                    token={this.state.token} // if exists, will show AuthForm\n                    currentUser={this.state.currentUser}\n                    logout={this.logout}\n                />\n                <Title onChange={this.getCurrentTitle} />\n                <ListDocs listDocs={this.state.allowedDocs} clickTitle={this.clickTitle} />\n                <ListUsers allowedUsers={this.state.allowedUsers} />\n                <AddUsers allUsers={this.state.allUsers} unallowedUsers={this.state.unallowedUsers} allowUser={this.allowUser} />\n                <ReactQuill\n                    className=\"Quill\"\n                    theme=\"snow\"\n                    value={this.state.currentContent}\n                    onChange={this.getCurrentInput}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}