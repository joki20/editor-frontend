{"version":3,"sources":["App.js","components/LandingPage.js","components/Toolbar.js","components/SaveBtn.js","components/ListDocs.js","components/ListUsers.js","components/AddUsers.js","components/InviteUsers.js","components/Title.js","components/PdfBtn.js","components/Comments.js","components/SwitchEditorBtn.js","components/ExecuteCodeBtn.js","index.js"],"names":["htmlCollection","rowIndex","LandingPage","props","token","className","landingPageMessage","type","defaultValue","value","onClick","handleLogin","handleRegister","Toolbar","currentUser","logout","messageStatus","SaveBtn","saveContent","ListDocs","listDocs","map","doc","clickTitle","name","id","title","ListUsers","allowedUsers","user","AddUsers","unallowedUsers","allowUser","InviteUsers","sendMail","Title","currentTitle","PdfBtn","savePDF","Comments","saveComment","SwitchEditorBtn","switchEditor","ExecuteCodeBtn","executeCode","server","socket","io","window","addEventListener","e","keyCode","document","getElementsByClassName","classList","contains","children","entries","i","row","console","log","removeAttribute","querySelector","add","parentElement","target","localName","indexOf","remove","setAttribute","rowComment","getAttribute","App","getDocs","a","allUsers","allowedDocs","axios","url","method","data","query","then","res","users","forEach","push","email","docs","allowed_users","allowed_user","state","setState","postDatabase","titleInp","contentType","currentContent","currentCode","post","content","updateDatabase","cont","docOwner","clickedDocOwner","docId","clickedDocId","status","catch","err","warn","getCurrentInput","innerHTML","titleInput","includes","_id","html","emit","on","clickedTitle","unallowedPersons","quill","executeBtn","pdfBtn","codemirror","DOMParser","parseFromString","body","cloneRow","cloneNode","appendChild","firstChild","nodeName","CodeMirror","setValue","save","titleExists","register","preventDefault","mail","password","login","match","get","Users","clickedUser","allowed","index","unallowed","splice","pdfContent","opt","margin","filename","html2canvas","scale","jsPDF","unit","format","orientation","html2pdf","inputEmail","addedAllowedUsers","toggle","jsLinesArray","querySelectorAll","line","textContent","base64String","btoa","String","code","commentsTextarea","temp","createElement","htmlCollectionRows","arr","slice","call","strContent","outerHTML","rowText","htmlRowsArray","commentsArray","this","theme","onChange","options","readOnly","lineWrapping","lineNumbers","lint","cursorBlinkRate","tabindex","indentWithTabs","mode","onBeforeChange","editor","getValue","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bd55133d.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport LandingPage from \"./components/LandingPage\";\nimport Toolbar from \"./components/Toolbar\";\nimport SaveBtn from \"./components/SaveBtn\";\nimport ListDocs from \"./components/ListDocs.js\";\nimport ListUsers from \"./components/ListUsers.js\";\nimport AddUsers from \"./components/AddUsers.js\";\nimport InviteUsers from \"./components/InviteUsers.js\";\nimport Title from \"./components/Title.js\";\nimport axios from 'axios'; // database requests\nimport './App.css';\nimport 'react-quill/dist/quill.bubble.css';\n// io is a function to call an individual socket\nimport io from \"socket.io-client\";\n// KRAV 1: SKAPA PDF\nimport PdfBtn from \"./components/PdfBtn.js\";\nimport html2pdf from 'html2pdf.js';\n// KRAV 2: KOD-KOMMENTARER\nimport Comments from \"./components/Comments.js\";\n// KRAV 3: MAILINBJUDAN\n// se backend\n// KRAV 4: CODE MODE\nimport 'codemirror/lib/codemirror.css'; // styles available for text editor\nimport 'codemirror/theme/material.css'; // theme\nimport 'codemirror/mode/javascript/javascript'; // xml/xml and css/css also available\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport SwitchEditorBtn from \"./components/SwitchEditorBtn.js\";\nimport ExecuteCodeBtn from \"./components/ExecuteCodeBtn.js\";\n\n// let server = `http://localhost:1337`;\nlet server = `https://jsramverk-editor-joki20.azurewebsites.net`\nconst socket = io(server); // http://localhost:3000\n\nvar htmlRowsArray;\nvar htmlCollection;\nvar rowIndex;\nvar rowText;\n\nwindow.addEventListener(\"keydown\", function (e) {\n    if (e.keyCode === 13 && !document.getElementsByClassName(\"Comments\")[0].classList.contains(\"hidden\")) {\n        htmlCollection = [...document.getElementsByClassName(\"ql-editor\")[0].children];\n\n        // remove highlighting and comment section\n        for (let [i, row] of htmlCollection.entries()) {\n            console.log(i);\n            row.removeAttribute(\"style\");\n        }\n        document.querySelector(\".Comments > textarea\").classList.add(\"hidden\")\n        document.querySelector(\".Comments > button\").classList.add(\"hidden\")\n    }\n});\n\nwindow.addEventListener(\"click\", function (e) {\n    let parentElement = e.target.parentElement;\n\n    // if <p> row inside ql-editor was clicked\n    if (parentElement.classList.contains(\"ql-editor\") && e.target.localName === \"p\") {\n        rowIndex = [...e.target.parentElement.children].indexOf(e.target);\n        htmlCollection = [...e.target.parentElement.children] // html collection\n\n        document.querySelector(\".Comments > textarea\").classList.remove(\"hidden\")\n        document.querySelector(\".Comments > button\").classList.remove(\"hidden\")\n        \n        // LIST COMMENTS IN THIS DOC\n        // convert each <p></p> to html and return to array of rows\n        // var parser = new DOMParser();\n        // var doc = parser.parseFromString(doc.content, 'text/html');\n        // var htmlCollection = doc.body.children;\n        // toRowsArray = [].slice.call(htmlCollection);\n\n        \n\n        // when clicking a row, remove styling for all rows, then set highlight style for clicked row\n        for (let [i, row] of htmlCollection.entries()) {\n            console.log(i);\n            row.removeAttribute(\"style\");\n        }\n        e.target.setAttribute(\"style\", \"background-color:lightyellow\");\n\n        // set textarea value to 'title' attribute of clicked <p>\n        let rowComment = htmlCollection[rowIndex].getAttribute('title');\n\n        let commentsTextarea = document.querySelector(\".Comments > textarea\");\n\n        commentsTextarea.value = rowComment;\n    } else if (\n        !parentElement.classList.contains(\"Comments\")\n    ) {\n        \n        // hide button and remove highlighting\n        document.querySelector(\".Comments > textarea\").classList.add(\"hidden\")\n        document.querySelector(\".Comments > button\").classList.add(\"hidden\")\n        htmlCollection = [...document.getElementsByClassName(\"ql-editor\")[0].children]\n        for (let [i, row] of htmlCollection.entries()) {\n            console.log(i);\n            row.removeAttribute(\"style\");\n        }\n    }\n});\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // CURRENT STATE\n        this.state = {\n            landingPageMessage: '',\n            allUsers: [],\n            allowedDocs: [],\n            allowedUsers: [], // array with objects\n            unallowedUsers: [],\n            currentTitle: '',\n            currentContent: '',\n            messageStatus: '',\n            token: \"\", // if token is set, user is logged in\n            currentUser: \"\",\n            clickedDocId: \"\",\n            clickedDocOwner: \"\",\n            currentCode: \"\",\n            type: \"document\",    // either \"document\" or \"code\"\n            rowIndex: rowIndex,\n            rowText: rowText,\n            htmlRowsArray: [],\n            commentsArray: [],\n        };\n    }\n\n    socketUpdateContent(content) {\n        this.setState({ currentContent: content })\n    }\n\n    getDocs = async () => {\n        let usersArray = [];\n        let allUsers = [];\n        let allowedDocs = [];\n\n        await axios({\n            url: `${server}/graphql/`,\n            method: 'post', // use post to get data\n            data: {\n                // if any key is not available in UsersType, error ERR_NAME_NOT_RESOLVED \n                // query the following keys allowed in UsersType\n                query: `\n                {\n                    users {\n                        email\n                        docs {\n                            id\n                            title\n                            content\n                            type\n                            allowed_users {\n                                email\n                            }\n                        }\n                    }\n                }\n                `\n            }\n        }).then((res) => {\n            usersArray = res.data.data.users; // array with { email:    and    docs: } \n            \n            // for each user...\n            usersArray.forEach((user) => {\n                // collect every created user in database\n                allUsers.push(user.email);\n                // look each associated doc if current logged in user is allowed\n                user.docs.forEach((doc) => {\n                    // users allowed to edit (each user is an object with key 'email') of this doc\n                    doc.allowed_users.forEach((allowed_user) => {\n                        // if user is allowed for this doc, then push doc into allowedDocs array\n                        if (allowed_user.email === this.state.currentUser) {\n                            allowedDocs.push(doc)\n                        }\n                    })\n                })\n            })\n        })\n        await this.setState({ allowedDocs: allowedDocs })\n        await this.setState({ allUsers: allUsers })\n    }\n\n    // MOTSVARIGHET MED GET REQUEST\n    //     await axios.get(`${server}/users`)\n    //         .then(res => {\n    //             let usersArray = res.data.data[0].Users;\n    //             // for each user...\n    //             usersArray.forEach((user) => {\n    //                 // collect every created user in database\n    //                 allUsers.push(user.email);\n    //                 // look each associated doc if current logged in user is allowed\n    //                 user.docs.forEach((doc) => {\n    //                     // go through each allowed user of this doc\n    //                     doc.allowed_users.forEach((allowed_user) => {\n    //                         // if user is allowed for this doc, then push doc into allowedDocs array\n    //                         if (allowed_user.email == this.state.currentUser) {\n    //                             allowedDocs.push(doc)\n    //                         }\n    //                     })\n    //                 })\n    //             })\n    //         })\n    //     await this.setState({ allowedDocs: allowedDocs })\n    //     await this.setState({ allUsers: allUsers })\n    // }\n\n\n// ADJUSTED DB WHERE EACH ALLOWED USER NOW IS AN OBJECT\n// {\n// \t\"_id\": {\n// \t\t\"$oid\": \"61631746cab3d5fde969ba7d\"\n// \t},\n// \t\"Users\": [{\n// \t\t\"email\": \"joki20@student.bth.se\",\n// \t\t\"password\": \"$2a$09$tihtbxPFSSFBOJ7mn20gyuAQYoweN81zVdM3z1odP44drKhgpbi76\",\n// \t\t\"docs\": [{\n// \t\t\t\"id\": \"616315285ebfcb13bacec332\",\n// \t\t\t\"title\": \"Den lille pige med svovlstikkerne\",\n//             \"content\": \"<p title='detta är en kommentar'>Der var engang en liten flikke</p><p><br></p><p>hej</p>\",\n//             \"type\": \"document\",\n//             \"allowed_users\": [\n//                 {\n//                     \"email\": \"joki20@student.bth.se\"\n//                 },\n//                 {\n//                     \"email\": \"abc@student.bth.se\"\n//                 }\n//             ]\n// \t\t}]\n// \t}, {\n// \t\t\"email\": \"abc@student.bth.se\",\n// \t\t\"password\": \"$2a$09$3mKfFqXD0lgLyOeBKFqk4uzknzu7rr3EzNU/.V9XCervJ7c0A8Mei\",\n// \t\t\"docs\": []\n// \t}, {\n// \t\t\"email\": \"johan@student.bth.se\",\n// \t\t\"password\": \"$2a$09$ik.zN7Egd7g2bKe4nj4GZu3BsrOA7I.Y.UnToHLKuJyunHHsl7Sfu\",\n// \t\t\"docs\": []\n// \t}]\n// }\n            \n            \n\n    // // MOUNT DATABASE DATA\n    // async componentDidMount() {\n    //     await this.getDatabase()\n    // }\n\n    postDatabase = (titleInp) => {\n        // post as query /create?title=title&content=text&type=document eller code\n\n        let contentType;\n\n        if (this.state.type === \"document\") {\n            contentType = this.state.currentContent\n        }\n\n        if (this.state.type === \"code\") {\n            contentType = this.state.currentCode;\n        }\n        \n        axios.post(`${server}/create`, {\n            email: this.state.currentUser,\n            title: titleInp,\n            content: contentType,\n            type: this.state.type\n        })\n\n        this.getDocs();\n    }\n\n    updateDatabase = async (cont) => {\n        this.setState({ messageStatus: \"Title content updated\" });\n        await axios.post(`${server}/update/`, {\n            docOwner: this.state.clickedDocOwner,\n            docId: this.state.clickedDocId,\n            content: cont,\n            type: this.state.type\n        })\n            .then(res => {\n                console.log(res.status) // 204 if successful\n            })\n            .catch(err => console.warn(err));\n    }\n\n    // SETSTATE: arrow function will prevent 'this.setState is not a function\n    getCurrentInput = (innerHTML) => {\n        this.setState({ currentContent: innerHTML });\n\n        // get title input and look for match in order get correct id\n        var titleInput = document.getElementsByClassName(\"titleInput\")[0].value;\n        var id = null;\n\n        this.state.allowedDocs.forEach((doc) => {\n            if (doc.title === titleInput) {\n                id = doc.id;\n            }\n        })\n\n        // if you are within allowed_users array, create socket\n        if (this.state.allowedUsers.includes(this.state.currentUser)) {\n            // emit object with id and content to backend in order to create room\n            let doc = {\n                _id: id,\n                html: this.state.currentContent\n            }\n            socket.emit(\"create\", doc)\n\n            // received from server to all clients, containing data.html\n            socket.on(\"doc\", (data) => {\n                this.setState({ currentContent: data.html })\n            });\n        }\n    }\n\n    clickTitle = async (e) => {\n        let clickedTitle = e.target.innerHTML; // get title from click\n        let allowedUsers = [];\n        let unallowedPersons = [];\n        let quill = document.getElementsByClassName(\"Quill\")[0];\n        let executeBtn = document.getElementsByClassName(\"ExecuteCodeBtn\")[0];\n        let pdfBtn = document.getElementsByClassName(\"PdfBtn\")[0];\n        let codemirror = document.getElementsByClassName(\"react-codemirror2\")[0];\n\n        this.setState({ currentTitle: clickedTitle })\n        \n        //await meaning finish this before next await\n        await this.state.allowedDocs.forEach((doc) => {\n            // add title\n            document.getElementsByClassName(\"titleInput\")[0].value = doc.title;\n            // if match is found in db\n            if (doc.title === clickedTitle) {\n\n                doc.allowed_users.forEach((allowed_user) => {\n                    allowedUsers.push(allowed_user.email);\n                })\n\n                this.setState({ type: doc.type })\n                this.setState({ allowedUsers: allowedUsers }) // array with emails\n                this.setState({ clickedDocId: doc.id })\n                this.setState({ clickedDocOwner: doc.allowed_users[0].email }) // first person in allowed_users always owns document\n\n                if (doc.type === \"document\") {\n                    // show normal editor\n                    quill.classList.remove(\"hideEditor\");\n                    codemirror.classList.add(\"hideEditor\");\n                    executeBtn.classList.add(\"hidden\");\n                    pdfBtn.classList.remove(\"hidden\");\n                    \n                    // empty content, since clicking on title will append <p> rows\n                    document.getElementsByClassName(\"ql-editor\")[0].innerHTML = '';\n                    // this.setState({ currentContent: doc.content })\n\n                    // SAVE COMMENTS IN THIS DOC\n                    // convert each <p></p> string to html and return to array of rows\n                    var parser = new DOMParser();\n                    var docu = parser.parseFromString(doc.content, 'text/html');\n                    \n                    var htmlCollection = docu.body.children;\n\n                    // // for each <p> tag with comment, add to content. This will make content have title attributes\n                    htmlCollection.forEach((row) => {\n                        let cloneRow = row.cloneNode(true);\n                        document.getElementsByClassName(\"ql-editor\")[0].appendChild(cloneRow);\n                    })\n                    // // if first <p> only contains <br>, remove it\n                    if (document.querySelector(\".ql-editor\").firstChild.firstChild.nodeName === \"BR\") {\n                        document.querySelector(\".ql-editor\").firstChild.remove();\n                    }\n                }\n                \n                if (doc.type === \"code\") {\n                    // show codemirror editor\n                    quill.classList.add(\"hideEditor\");\n                    codemirror.classList.remove(\"hideEditor\");\n                    executeBtn.classList.remove(\"hidden\");\n                    pdfBtn.classList.add(\"hidden\");\n\n                    // add content to doc\n                    document.querySelector('.CodeMirror').CodeMirror.setValue(doc.content)\n                }\n            }\n        })\n\n        // await this.setState({ currentComments: rowsArray })\n        htmlRowsArray = htmlCollection;\n\n        // if user is not allowed, add to list of unallowed users\n        await this.state.allUsers.forEach((user) => {\n            if (!this.state.allowedUsers.includes(user)) {\n                unallowedPersons.push(user);\n            }\n        })\n        this.setState({ unallowedUsers: unallowedPersons })\n\n        // SHOW invite content\n        document.getElementsByClassName(\"inputInvitation\")[0].classList.remove(\"hidden\");\n        document.getElementsByClassName(\"InviteBtn\")[0].classList.remove(\"hidden\");\n        // SHOW save button\n        document.getElementsByClassName(\"SaveBtn\")[0].classList.remove(\"hidden\");\n        // SHOW correct button: 'Create PDF' or 'Execute Code'\n    }\n\n    \n    save = async () => {\n        let titleExists = \"no\";\n\n        if (this.state.token === \"\") {\n            return this.setState({ messageStatus: \"You must be logged in\" });\n        }\n        // get text of title input\n        var titleInput = document.getElementsByClassName(\"titleInput\")[0].value;\n        var id = null;\n\n        if (!titleInput) {\n            return this.setState({ messageStatus: \"You must provide a title\" });\n        }\n        \n        // forEach((element) => { ... } )\n        this.state.allowedDocs.forEach((doc) => {\n            // check for match, and if so do an update\n            if (doc.title === titleInput) {\n                this.setState({ clickedDocId: doc.id });\n                // owner is always first in array_users\n                this.setState({ clickedDocOwner: doc.allowed_users[0].name })\n\n                titleExists = \"yes\";\n                id = doc.id;\n                this.updateDatabase(this.state.currentContent)\n            }\n        }) // stop loop\n\n        // IF TITLE DOESN'T EXIST\n        if (titleExists === \"no\") {\n            this.setState({ messageStatus: \"New entry created\" });\n            await this.postDatabase(titleInput);\n        }\n    }\n\n    register = async (e) => {\n        e.preventDefault();\n\n        let mail = document.getElementsByClassName(\"email\")[0].value;\n        let password = document.getElementsByClassName(\"password\")[0].value;\n\n        // register user\n        await axios.post(`${server}/register`, {\n            email: mail,\n            password: password\n        })\n        \n        document.getElementsByClassName(\"email\")[0].value = '';\n        document.getElementsByClassName(\"password\")[0].value = '';\n        return this.setState({ landingPageMessage: `${mail} was registered` });\n    }\n\n    login = async (e) => {\n        e.preventDefault();\n        let mail = document.getElementsByClassName(\"email\")[0].value\n        let password = document.getElementsByClassName(\"password\")[0].value\n        let match = 'no';\n\n        this.setState({ currentUser: mail })\n\n            // if no email or password, exit function\n        if (!mail || !password) {\n            return this.setState({ messageStatus: \"Email or password missing\" });\n        }\n\n        await axios.get(`${server}/users`)\n            .then(res => {\n                // get array of users\n                let usersArray = res.data.data[0].Users\n                // check if user exists\n                usersArray.forEach((user) => {\n                    if (user.email === mail) {\n                        match = \"yes\"\n                    }\n                })\n            })\n\n            // if not, show message\n            if (match === \"no\") {\n                this.setState({ messageStatus: \"Sorry, but email doesn't exist\" });\n            }\n            // if match, send email and password to backend and create JWT\n            if (match === \"yes\") {\n                // send email and password to backend, process login and return JWT\n                await axios.post(`${server}/login`, {\n                    email: mail,\n                    password: password\n                })\n                // if successful login response containsjwt, oherwise undefined\n                    .then(res => {\n                        let gotToken = res.data.data\n\n                        if (gotToken) {\n                            this.setState({ token: res.data.data })                            \n                        }\n                })\n                .catch(err => console.warn(err));\n            }\n        // setState to update array\n        this.getDocs()\n\n        this.setState({ messageStatus: '' })\n    }\n\n    logout = async () => {\n        this.setState({ currentUser: \"\" })\n        this.setState({ token: \"\" })\n        this.setState({ allowedDocs: [] })\n        this.setState({ allowedUsers: [] })\n        this.setState({ unallowedPersons: [] })\n        this.setState({ currentTitle: '' })\n        this.setState({ currentContent: '' })\n        document.getElementsByClassName(\"titleInput\")[0].value = ''\n    }\n\n    allowUser = async (e) => {\n        e.preventDefault();\n        let clickedUser = e.target.innerHTML;\n\n        // function for adding user to allowed_users for this doc\n        await axios.post(`${server}/allow_user`, {\n            email: clickedUser,\n            currentUser: this.state.currentUser,\n            docId: this.state.clickedDocId\n        })\n\n        // allow user in frontend\n        let allowed = this.state.allowedUsers;\n\n        allowed.push(clickedUser);\n        this.setState({ allowedUsers: allowed })\n\n        // delete user from unallowedUsers in frontend\n        const index = this.state.unallowedUsers.indexOf(clickedUser);\n        let unallowed = this.state.unallowedUsers;\n        // remove user\n        unallowed.splice(index, 1);\n        this.setState({ unallowedUsers: unallowed})\n\n        return this.setState({ messageStatus: `${clickedUser} is now allowed to edit this document` });\n    }\n\n    // Here is your export function\n    // Typically this would be triggered by a click on an export button\n    savePDF = async () => {\n        let pdfContent = `<h1>${this.state.currentTitle}</h1>${this.state.currentContent}`;\n        var opt = {\n            margin:       1,\n            filename:     'myfile.pdf',\n            html2canvas:  { scale: 1 },\n            jsPDF:        { unit: 'in', format: 'A4', orientation: 'portrait' }\n          };\n        \n        html2pdf(pdfContent, opt);\n    }\n\n    sendMail = async (e) => {\n        let inputEmail = document.getElementsByClassName(\"inputInvitation\")[0].value;\n        await axios.post(`${server}/sendmail`, {\n            email: inputEmail,\n            currentUser: this.state.currentUser,\n            docId: this.state.clickedDocId,\n            title: this.state.currentTitle,\n        })     \n\n        this.setState({ messageStatus: \"Invitation email was sent\" });\n\n        // do some error handling before this, if user inputs an invalid or already occurring email\n        await axios.post(`${server}/allow_user`, {\n            email: inputEmail,\n            currentUser: this.state.currentUser,\n            docId: this.state.clickedDocId\n        })\n\n        let addedAllowedUsers = this.state.allowedUsers;\n\n        addedAllowedUsers.push(inputEmail);\n        \n        this.setState({ allowedUsers: addedAllowedUsers })\n\n        // empty input\n        document.getElementsByClassName(\"inputInvitation\")[0].value = '';\n    }\n\n    switchEditor = async (e) => {\n        let quill = document.getElementsByClassName(\"Quill\")[0];\n        let codemirror = document.getElementsByClassName(\"react-codemirror2\")[0];\n        let executeBtn = document.getElementsByClassName(\"ExecuteCodeBtn\")[0];\n        let pdfBtn = document.getElementsByClassName(\"PdfBtn\")[0];\n        \n        quill.classList.toggle(\"hideEditor\");\n        codemirror.classList.toggle(\"hideEditor\");\n        // from pdf button to code button\n        if (this.state.type === \"document\") {\n            this.setState({ type: \"code\" })\n            document.getElementsByClassName(\"ExecuteCodeBtn\")[0].classList.remove(\"hidden\");\n            pdfBtn.classList.add(\"hidden\");\n        }\n        // from code button to pdf button\n        if (this.state.type === \"code\") {\n            this.setState({ type: \"document\" })\n            document.getElementsByClassName(\"ExecuteCodeBtn\")[0].classList.add(\"visible\");\n            pdfBtn.classList.remove(\"hidden\");\n        }\n    }\n\n    executeCode = async (e) => {\n        // only if in code mode\n        if (this.state.type === \"code\") {\n            let quill = document.getElementsByClassName(\"Quill\")[0];\n            let jsLinesArray = document.querySelectorAll(\"span[role='presentation']\");\n            let jsCode = \"\";\n\n            jsLinesArray.forEach((line) => {\n                jsCode += line.textContent;\n            })\n\n            let base64String = btoa(String(this.state.currentCode));\n\n            await axios.post(`https://execjs.emilfolino.se/code`, {\n                code: base64String,\n            }).then((res) => {\n                // display returned message\n                this.setState({ messageStatus: res.data.data })\n            })\n        }\n    }\n\n    saveComment = async (e) => {\n        let commentsTextarea = document.querySelector(\".Comments > textarea\");\n\n        // COMMENTS\n        var temp = document.createElement( 'div' );\n        temp.innerHTML = this.state.currentContent;\n        let htmlCollectionRows = temp.children;\n\n        // set title to clicked element\n        htmlCollectionRows[rowIndex].setAttribute('title', commentsTextarea.value);\n        // // empty ql editor\n        document.getElementsByClassName(\"ql-editor\")[0].textContent = '';\n        // // add rows with edited title comment\n        // // for each <p> tag with comment, add to content.\n        // arrayRows.forEach((row) => {\n        //     document.getElementsByClassName(\"ql-editor\")[0].appendChild(row);\n        // })\n\n        // convert htmlCollection to array...\n        var arr = [].slice.call(htmlCollectionRows);\n        var strContent = '';\n        // update element string for database re-add to ql editor\n        arr.forEach((row) => {\n            row.removeAttribute(\"style\");\n            strContent += row.outerHTML;\n            document.getElementsByClassName(\"ql-editor\")[0].appendChild(row);\n        })\n\n        this.updateDatabase(strContent);\n\n        this.setState({ messageStatus: \"Comment added to row\" });\n\n        // hide button and remove highlighting\n        document.querySelector(\".Comments > textarea\").classList.add(\"hidden\")\n        document.querySelector(\".Comments > button\").classList.add(\"hidden\")\n        htmlCollection = [...document.getElementsByClassName(\"ql-editor\")[0].children]\n        for (let [i, row] of htmlCollection.entries()) {\n            console.log(i);\n            row.removeAttribute(\"style\");\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <LandingPage\n                    // functions for register and login\n                    handleRegister={this.register}\n                    handleLogin={this.login}\n                    token={this.state.token} // if exists, will show AuthForm\n                    landingPageMessage={this.state.landingPageMessage}\n                />\n                <Toolbar\n                    messageStatus={this.state.messageStatus}\n                    currentUser={this.state.currentUser}\n                    logout={this.logout}\n                />\n                <Title currentTitle={this.state.currentTitle} />\n                <ListDocs listDocs={this.state.allowedDocs} clickTitle={this.clickTitle} />\n                <Comments saveComment={this.saveComment} />\n                <ListUsers allowedUsers={this.state.allowedUsers} />\n                <AddUsers allUsers={this.state.allUsers} unallowedUsers={this.state.unallowedUsers} allowUser={this.allowUser} />\n                <InviteUsers sendMail={this.sendMail} />\n                <ReactQuill\n                    className=\"Quill\"\n                    theme=\"snow\"\n                    value={this.state.currentContent}\n                    onChange={this.getCurrentInput}\n                />\n                <CodeMirror\n                    className=\"hideEditor\"\n                    value={this.state.value}\n                    options={{\n                        readOnly: false,\n                        lineWrapping: true,\n                        lineNumbers: true,\n                        lint: true,\n                        cursorBlinkRate: 1000,\n                        tabindex: 3,\n                        indentWithTabs: true,\n                        mode: 'javascript',\n                        theme: 'material'\n                    }}\n                    onBeforeChange={(editor, data, value) => {\n                        this.setState({ currentCode: editor.getValue() });\n                        this.setState({ value });\n                      }}\n                    onChange={(editor, data, value) => {\n                        this.setState({ currentCode: editor.getValue() });\n                        console.log(this.state.currentCode);\n                      }}\n                />\n                <SwitchEditorBtn switchEditor={this.switchEditor} />\n                <ExecuteCodeBtn executeCode={this.executeCode} />\n                <PdfBtn savePDF={this.savePDF} />\n                <SaveBtn saveContent={this.save} />\n            </div>\n        );\n    }\n}\n\nexport default App","import React from \"react\";\n\n// LANDINGPAGE WITH SAVE BUTTON props.children inside\nconst LandingPage = (props) => {\n    // if not logged in, display LandingPage\n    if (!props.token) {\n        return (\n            <div className=\"LandingPage\">\n                <div className=\"landingPageMessage\">\n                        {props.landingPageMessage}\n                </div>\n                <form>\n                    <label>Email</label>\n                    <input className=\"email\" type=\"email\" defaultValue=\"joki20@student.bth.se\"></input>\n\n                    <label>Password</label>\n                    <input className=\"password\" defaultValue=\"abc123\"></input>\n                    <div>\n                    <input\n                            type=\"submit\"\n                            className=\"login\"\n                            value=\"Login\"\n                            onClick={props.handleLogin}\n                        />\n                        <input\n                            type=\"submit\"\n                            className=\"register\"\n                            value=\"Register\"\n                            onClick={props.handleRegister} />\n                    </div>\n                </form>\n            </div>\n        )\n    } else {\n        return null;\n    }\n};\n\nexport default LandingPage;\n","import React from \"react\";\n\n// TOOLBAR WITH SAVE BUTTON props.children inside\nconst Toolbar = (props) => {\n    return (\n        <div className=\"Toolbar\">\n            <div className=\"user\">\n                <div>{props.currentUser} is logged in</div>\n                <button onClick={props.logout} >Log out</button>\n            </div>\n            <div className=\"clickedStatus\">{props.messageStatus}</div>\n        </div>\n    )\n};\n\nexport default Toolbar;\n","import React from \"react\";\n\n// Save button\nconst SaveBtn = (props) => {\n    return <button className=\"SaveBtn hidden\" onClick={props.saveContent} >SAVE DOC</button>;\n};\n\nexport default SaveBtn;","import React from 'react';\n\n\n// CURRENT STATE\nconst ListDocs = (props) => {\n  return (\n    <div className=\"ListDocs\">\n      <h2>Documents</h2>\n      <ul>\n        {props.listDocs.map((doc) => (\n          <li onClick={props.clickTitle}\n        key={doc.id}\n        name={doc.id}\n      >{doc.title}</li>\n      ))\n      }\n      </ul>\n    </div>\n  )\n}\n\n  export default ListDocs;","import React from 'react';\n\n// CURRENT STATE\nconst ListUsers = (props) => {\n  let id = 0;\n  return (\n    <div className=\"ListUsers\">\n      <h2>Allowed users</h2>\n      <ul>\n        {props.allowedUsers.map((user) => (\n          <li \n        key={++id}\n      >{user}</li>\n      ))\n      }\n      </ul>\n    </div>\n  )\n}\n\nexport default ListUsers;","import React from 'react';\n\n\n// CURRENT STATE\nconst AddUsers = (props) => {\n  let id = 0;\n  return (\n    <div className=\"AddUsers\">\n    <h2>Add user</h2>\n      <ul>\n      {props.unallowedUsers.map((user) => (\n          <li onClick={props.allowUser}\n        key={++id}\n      >{user}</li>\n      ))\n      }\n      </ul>\n    </div>\n  )\n}\n\nexport default AddUsers;","import React from 'react';\n\n\n// CURRENT STATE\nconst InviteUsers = (props) => {\n  let id = 0;\n  return (\n    <div className=\"InviteUsers\">\n          <h2>Invite user</h2>\n          <input className=\"inputInvitation hidden\"></input>\n      <button className=\"InviteBtn hidden\" onClick={props.sendMail} >✉️</button>\n    </div>\n  )\n}\n\nexport default InviteUsers;","import React from \"react\";\n\n// TOOLBAR WITH SAVE BUTTON props.children inside\nconst Title = (props) => {\n    return (\n        <div className=\"Title\">\n            <input className=\"titleInput\" aria-label=\"inputLable\" value={props.currentTitle}></input>\n        </div>\n\n    )\n};\n\nexport default Title;","import React from \"react\";\n\n// Switch button\nconst PdfBtn = (props) => {\n    return <button className=\"PdfBtn\" onClick={props.savePDF} >Create PDF</button>;\n};\n\nexport default PdfBtn;","import React from 'react';\n\n\n// IF COMMENT (<p title=) EXISTS, ADD LI, OTHERWISE DON'T\nconst Comments = (props) => {\n  return (\n    <div className=\"Comments\">\n      <h2>Comments</h2>\n      <textarea className=\"hidden\"></textarea>\n      <button className=\"CommentsBtn hidden\" onClick={props.saveComment}>Save comment</button>\n    </div>\n  )\n}\n\n  export default Comments;","import React from \"react\";\n\n// Switch button\nconst SwitchEditorBtn = (props) => {\n    return <button className=\"SwitchEditorBtn\" onClick={props.switchEditor} >Switch editor</button>;\n};\n\nexport default SwitchEditorBtn;\n","import React from \"react\";\n\n// Execute code button\nconst ExecuteCodeBtn = (props) => {\n    return <button className=\"ExecuteCodeBtn hidden\" onClick={props.executeCode} >Execute code</button>;\n};\n\nexport default ExecuteCodeBtn;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}