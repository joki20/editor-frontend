{"version":3,"sources":["components/Toolbar.js","components/ListAll.js","components/Title.js","App.js","index.js"],"names":["Toolbar","props","className","onClick","saveContent","messageStatus","ListAll","console","log","listDocs","map","doc","clickTitle","name","_id","title","Title","App","getDatabase","axios","get","then","res","setState","listDocuments","data","postDatabase","titleInp","a","post","content","state","currentContent","response","error","updateDatabase","id","currentTitle","status","catch","err","warn","getCurrentInput","innerHTML","getCurrentTitle","e","clickedTitle","target","forEach","document","getElementsByClassName","value","save","titleExists","titleInput","firstUpdate","this","onChange","theme","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.916c7885.chunk.js","sourcesContent":["import React from \"react\";\n\n// TOOLBAR WITH SAVE BUTTON props.children inside\nconst Toolbar = (props) => {\n    return (\n        <div className=\"Toolbar\">\n            <button onClick={props.saveContent} >SAVE</button>\n            <div className=\"clickedStatus\">{props.messageStatus}</div>\n        </div>\n    )\n};\n\nexport default Toolbar;\n","import React from 'react';\n\n\n// CURRENT STATE\nconst ListAll = (props) => {\n  console.log(props)\n  return (\n    <div>\n      <ul className=\"ListAll\">\n        {props.listDocs.map((doc) => (\n          <li onClick={props.clickTitle}\n        key={doc._id}\n        name={doc._id}\n      >{doc.title}</li>\n      ))\n      }\n      </ul>\n    </div>\n  )\n}\n\n  export default ListAll;","import React from \"react\";\n\n// TOOLBAR WITH SAVE BUTTON props.children inside\nconst Title = (props) => {\n    return (\n        <div className=\"Title\">\n            <h2>Title</h2>\n            <input className=\"titleInput\" aria-label=\"inputLable\"></input>\n        </div>\n\n    )\n};\n\nexport default Title;","import React from \"react\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport Toolbar from \"./components/Toolbar\";\nimport ListAll from \"./components/ListAll.js\";\nimport Title from \"./components/Title.js\";\nimport axios from 'axios'; // database requests\nimport './App.css';\nimport 'react-quill/dist/quill.bubble.css';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // CURRENT STATE\n        this.state = {\n            listDocuments: [],\n            currentTitle: '',\n            currentContent: '',\n            messageStatus: '',\n        };\n\n        // preventing componentDidUpdate to run when page loads\n        this.firstUpdate = \"yes\"; \n\n    }\n\n    getDatabase = () => {\n        axios.get(`https://jsramverk-editor-joki20.azurewebsites.net/list`)\n        .then(res => {\n            this.setState({ listDocuments: res.data.data }); //activates componentDidUpdate\n        })\n    }\n\n        // MOUNT DATABASE DATA\n        async componentDidMount() {\n            await this.getDatabase()\n        }\n\n    postDatabase = async (titleInp) => {\n        // post as query /create?title=titel&content=text\n        await axios.post(`https://jsramverk-editor-joki20.azurewebsites.net/create`, {\n            title: titleInp,\n            content: this.state.currentContent\n        })\n            .then((response) => {\n                console.log(response);\n        })\n            .then((error) => {\n                console.log(error);\n            })\n        \n        this.getDatabase();\n    }\n\n    updateDatabase = async (id) => {\n        console.log(id);\n        await axios.post(`https://jsramverk-editor-joki20.azurewebsites.net/update/${id}`, {\n            title: this.state.currentTitle,\n            content: this.state.currentContent\n        })\n            .then(response => response.status)\n            .catch(err => console.warn(err));\n    }\n\n    // SETSTATE: arrow function will prevent 'this.setState is not a function\n    getCurrentInput = (innerHTML) => {\n        this.setState({ currentContent: innerHTML });\n    }\n\n    getCurrentTitle = (innerHTML) => {\n        this.setState({ currentTitle: innerHTML });\n    }\n\n    clickTitle = (e) => {\n        let clickedTitle = e.target.innerHTML; // get title from click\n        this.state.listDocuments.forEach((doc) => {\n            if (doc.title == clickedTitle) {\n                document.getElementsByClassName(\"titleInput\")[0].value = doc.title;\n                // setState title and content\n                this.setState({ currentTitle: doc.title })\n                this.setState({ currentContent: doc.content })\n            }\n        })\n    }\n\n    \n    save = () => {\n        let titleExists = \"no\";\n        console.log(\"SAVING\")\n\n        // get text of title input\n        var titleInput = document.getElementsByClassName(\"titleInput\")[0].value;\n        var id = null;\n        \n        // forEach((element) => { ... } )\n        this.state.listDocuments.forEach((doc) => {\n            // check for match, and if so do an update\n            if (doc.title == titleInput) {\n                this.setState({ messageStatus: \"Title content updated\" });\n                titleExists = \"yes\";\n                id = doc._id;\n                this.updateDatabase(id)\n            }\n        }) // stop loop\n\n        // IF TITLE DOESN'T EXIST\n        if (titleExists == \"no\") {\n            this.setState({ messageStatus: \"New entry created\" });\n            this.postDatabase(titleInput);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Toolbar\n                    saveContent={this.save}\n                    messageStatus={this.state.messageStatus}\n                />\n                <ListAll listDocs={this.state.listDocuments} clickTitle={this.clickTitle} />\n                <Title onChange={this.getCurrentTitle} />\n                <ReactQuill\n                    className=\"Quill\"\n                    theme=\"snow\"\n                    value={this.state.currentContent}\n                    onChange={this.getCurrentInput}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}